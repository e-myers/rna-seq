% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/write_expr.R
\name{write_expr}
\alias{write_expr}
\title{Write expression values to csv}
\usage{
write_expr(inFiles, outPrefix, tpm = FALSE, verbose = TRUE)
}
\arguments{
\item{inFiles}{Character - List of featureCounts output files (not the ones that end in "summary" or "report")}

\item{outPrefix}{String - Output filename will be this followed by ".csv" (or "_TPM.csv", if TPM=TRUE).  Include path if you don't want current directory.}

\item{tpm}{Logical - If true, convert values to transcripts per million}

\item{verbose}{Logical - If true, reports name of each file as it's read}

\item{outDest}{String - Path to directory where output file should be written}
}
\description{
Read counts from featureCounts output and write them to a csv file.  Gene-by-sample matrix.
}
\details{
Note that the featureCounts "Length" field (which is used to get TPM) appears to be the summed
lengths of all the transcripts in the annotation file that are tagged as being part of that gene.
So if you used a file with all exons, it's the gene's exonic length; for introns, it's the gene's intronic length.
}
\examples{
setwd("counts_nucseq/intronic_counts/")
fileList = list.files(pattern="_fcounts.txt") # note underscore prevents getting, e.g., "p200" included with "p2"
fileList = fileList[ - which(regexpr('summary', fileList) > 0 ) ]
write_expr(fileList, outPrefix="Nucseq_intronic", tpm=TRUE, outDest="tpm_nucseq")
}
\author{
Emma Myers
}
